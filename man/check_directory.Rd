% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_directory.R
\name{check_directory}
\alias{check_directory}
\title{Check whether contents of directory comply with the Darwin Core Standard}
\usage{
check_directory(source = "data-publish")
}
\arguments{
\item{source}{(string) A directory containing the files to be published, or
optionally a \code{.zip} file built from the same (i.e. with \code{build_archive()}).
Defaults to the \code{data-publish} folder within the current working directory.}
}
\value{
Invisibly returns a tibble to the workspace containing check
results; but primarily called for the side-effect of generating a report in
the console.
}
\description{
Supply a folder containing files for a Darwin Core Archive to check whether
files meet Darwin Core Standard. \code{check_archive()} runs
\code{\link[corella:check_dataset]{corella::check_dataset()}} on \code{occurrences.csv} and \code{events.csv} files, and
\code{\link[delma:check_metadata]{delma::check_metadata()}} on \code{eml.xml} and \code{meta.xml} files. These
functions run tests to determine whether data and metadata pass
Darwin Core Standard criteria.
}
\examples{
\donttest{
# Run checks csv or xml files in specified directory
# Defaults to folder data-publish/ 
check_directory()

}
}
\seealso{
\code{check_archive()} checks a Darwin Core Archive via a GBIF API,
rather than locally.
}
