% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/build_archive.R
\name{build_archive}
\alias{build_archive}
\title{Build a Darwin Core Archive from a folder}
\usage{
build_archive(overwrite = FALSE, quiet = FALSE)
}
\arguments{
\item{overwrite}{(logical) Should existing files be overwritten? Defaults to
\code{FALSE}.}

\item{quiet}{(logical) Whether to suppress messages about what is happening.
Default is set to \code{FALSE}; i.e. messages are shown.}
}
\value{
Invisibly returns the location of the built zip file; but typically
called for the side-effect of building a 'Darwin Core Archive' (i.e. a zip
file).
}
\description{
A Darwin Core archive is a zip file containing a combination of
data and metadata. \code{build_archive()} constructs this zip file. It assumes
that all necessary files have been pre-constructed, and can be found inside a
single folder with no additional or redundant information. Both the source
folder and the file name and path of the archive \code{.zip} file are set using
\code{\link[=galaxias_config]{galaxias_config()}}.

Structurally,
\code{build_archive()} is similar to \code{devtools::build()}, in the sense that it
takes a repository and wraps it for publication.
}
\details{
This function looks for three types of objects in the specified \code{directory}:
\itemize{
\item Data

One or more csv files named \code{occurrences.csv}, \code{events.csv} and/or
\code{multimedia.csv}.
These csv files contain data standardised using Darwin Core Standard
(see \code{\link[corella:corella-package]{corella::corella-package()}} for details). A \code{data.frame}/\code{tibble}
can be added to the correct folder using \code{\link[=use_data]{use_data()}}.
\item Metadata

A metadata statement in \code{EML} format with the file name \code{eml.xml}.
Completed metadata statements written markdown as \code{.Rmd} or \code{qmd} files
can be converted and saved to the correct folder using \code{\link[=use_metadata]{use_metadata()}}.
Create a new template with \code{\link[=use_metadata_template]{use_metadata_template()}}.
\item Schema

A 'schema' document in xml format with the file name \code{meta.xml}.
\code{build_archive()} will detect whether this file is present and build a
schema file if missing. This file can also be constructed
separately using \code{\link[=use_schema]{use_schema()}}.
}

\code{build_archive()} will not build a Darwin Core Archive with these files
present in the source directory. The resulting Archive is saved as a zip
folder in the parent directory by default.
}
\examples{
\dontshow{
.old_wd <- setwd(tempdir())
}
# set up an archive somehow?
build_archive()
\dontshow{
setwd(.old_wd)
}
}
\seealso{
\code{\link[=use_data]{use_data()}}, \code{\link[=use_metadata]{use_metadata()}}, \code{\link[=use_schema]{use_schema()}}
}
